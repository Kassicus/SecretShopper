// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/family" | "/family/[familyId]" | "/family/[familyId]/member/[memberId]" | "/family/[familyId]/profiles" | "/family/[familyId]/settings" | "/family/[familyId]/wishlists" | "/groups" | "/groups/[groupId]" | "/login" | "/profile" | "/profile/edit/[familyId]" | "/register" | "/wishlist" | "/wishlist/add" | "/wishlist/edit/[itemId]"
type AppRouteHandlerRoutes = "/api/auth/[...nextauth]" | "/api/auth/register" | "/api/families" | "/api/families/[familyId]" | "/api/families/[familyId]/invite" | "/api/families/[familyId]/members/[memberId]" | "/api/families/join" | "/api/groups" | "/api/groups/[groupId]" | "/api/groups/[groupId]/contribute" | "/api/groups/[groupId]/messages" | "/api/profiles" | "/api/wishlist" | "/api/wishlist/[itemId]" | "/api/wishlist/[itemId]/claim" | "/api/wishlist/[itemId]/purchase"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/register": {}
  "/api/families": {}
  "/api/families/[familyId]": { "familyId": string; }
  "/api/families/[familyId]/invite": { "familyId": string; }
  "/api/families/[familyId]/members/[memberId]": { "familyId": string; "memberId": string; }
  "/api/families/join": {}
  "/api/groups": {}
  "/api/groups/[groupId]": { "groupId": string; }
  "/api/groups/[groupId]/contribute": { "groupId": string; }
  "/api/groups/[groupId]/messages": { "groupId": string; }
  "/api/profiles": {}
  "/api/wishlist": {}
  "/api/wishlist/[itemId]": { "itemId": string; }
  "/api/wishlist/[itemId]/claim": { "itemId": string; }
  "/api/wishlist/[itemId]/purchase": { "itemId": string; }
  "/dashboard": {}
  "/family": {}
  "/family/[familyId]": { "familyId": string; }
  "/family/[familyId]/member/[memberId]": { "familyId": string; "memberId": string; }
  "/family/[familyId]/profiles": { "familyId": string; }
  "/family/[familyId]/settings": { "familyId": string; }
  "/family/[familyId]/wishlists": { "familyId": string; }
  "/groups": {}
  "/groups/[groupId]": { "groupId": string; }
  "/login": {}
  "/profile": {}
  "/profile/edit/[familyId]": { "familyId": string; }
  "/register": {}
  "/wishlist": {}
  "/wishlist/add": {}
  "/wishlist/edit/[itemId]": { "itemId": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
