// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(auth)/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../app/(auth)/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/[familyId]/member/[memberId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family/[familyId]/member/[memberId]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/[familyId]/member/[memberId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/[familyId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family/[familyId]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/[familyId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/[familyId]/profiles/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family/[familyId]/profiles">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/[familyId]/profiles/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/[familyId]/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family/[familyId]/settings">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/[familyId]/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/[familyId]/wishlists/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family/[familyId]/wishlists">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/[familyId]/wishlists/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/family/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/family">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/family/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/groups/[groupId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/groups/[groupId]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/groups/[groupId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/groups/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/groups">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/groups/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/profile/edit/[familyId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile/edit/[familyId]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/profile/edit/[familyId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/wishlist/add/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/wishlist/add">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/wishlist/add/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/wishlist/edit/[itemId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/wishlist/edit/[itemId]">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/wishlist/edit/[itemId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/(dashboard)/wishlist/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/wishlist">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/wishlist/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/families/[familyId]/invite/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/families/[familyId]/invite">> = Specific
  const handler = {} as typeof import("../../app/api/families/[familyId]/invite/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/families/[familyId]/members/[memberId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/families/[familyId]/members/[memberId]">> = Specific
  const handler = {} as typeof import("../../app/api/families/[familyId]/members/[memberId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/families/[familyId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/families/[familyId]">> = Specific
  const handler = {} as typeof import("../../app/api/families/[familyId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/families/join/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/families/join">> = Specific
  const handler = {} as typeof import("../../app/api/families/join/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/families/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/families">> = Specific
  const handler = {} as typeof import("../../app/api/families/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/groups/[groupId]/contribute/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/groups/[groupId]/contribute">> = Specific
  const handler = {} as typeof import("../../app/api/groups/[groupId]/contribute/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/groups/[groupId]/messages/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/groups/[groupId]/messages">> = Specific
  const handler = {} as typeof import("../../app/api/groups/[groupId]/messages/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/groups/[groupId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/groups/[groupId]">> = Specific
  const handler = {} as typeof import("../../app/api/groups/[groupId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/groups/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/groups">> = Specific
  const handler = {} as typeof import("../../app/api/groups/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profiles/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profiles">> = Specific
  const handler = {} as typeof import("../../app/api/profiles/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/wishlist/[itemId]/claim/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/wishlist/[itemId]/claim">> = Specific
  const handler = {} as typeof import("../../app/api/wishlist/[itemId]/claim/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/wishlist/[itemId]/purchase/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/wishlist/[itemId]/purchase">> = Specific
  const handler = {} as typeof import("../../app/api/wishlist/[itemId]/purchase/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/wishlist/[itemId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/wishlist/[itemId]">> = Specific
  const handler = {} as typeof import("../../app/api/wishlist/[itemId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/wishlist/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/wishlist">> = Specific
  const handler = {} as typeof import("../../app/api/wishlist/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/(dashboard)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(dashboard)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
